{
  "name": "AmberWriter",
  "author": "Guseyn",
  "variables":
  {
    "accent": "#F79F1F",
    "highlight": "var(accent)",
    "red": "#ef786c",
    "foreground": "#cbcccc"
  },
  "globals":
  {
    "foreground":                  "var(foreground)",
    "background":                  "#1b1b1b",

    // ‚úçÔ∏è Caret and accent colors
    "caret":                       "var(accent)",
    "accent":                      "var(accent)",

    // ü™Ñ Line and misspelling highlight
    "line_highlight":              "#222",
    "misspelling":                 "#5fb654",

    // üü° Your selection and find highlight overrides
    "selection":                   "color(var(accent) alpha(0.45))",
    "selection_border":            "var(accent)",
    "inactive_selection":          "#464646",
    "selection_corner_radius":     "0",
    "selection_foreground":        "#fff",

    // üîç Word / find highlights
    "highlight":                   "var(highlight)",
    "find_highlight":              "color(var(accent) alpha(0.45))",
    "find_highlight_foreground":   "#fff",

    // üß≠ Matching brackets and tags
    "brackets_options":            "foreground underline bold",
    "brackets_foreground":         "var(accent)",
    "bracket_contents_options":    "foreground underline bold",
    "bracket_contents_foreground": "var(accent)",
    "tags_options":                "foreground underline bold",
    "tags_foreground":             "var(accent)"
  },
  "rules":
  [
    {
      "name": "Title",
      "scope": "entity.name.section.markdown",
      "foreground": "var(accent)",
      "font_style": "bold"
    },
    {
      "scope": "markup.heading",
      "font_style": "bold"
    },
    {
      "scope": "markup.italic",
      "font_style": "italic"
    },
    {
      "scope": "markup.bold",
      "font_style": "bold"
    },
    {
      "scope": "markup.bold & markup.italic",
      "font_style": "bold italic"
    },
    {
      "scope": "markup.raw, meta.code-fence",
      "background": "#262626"
    },
    {
      "scope": "comment, punctuation.definition.link, punctuation.definition.image, punctuation.definition.metadata, meta.link.inline, meta.image.inline",
      "foreground": "#706f70"
    },
    {
      "scope": "meta.link.inline.description, meta.image.inline.description",
      "foreground": "var(foreground)"
    },
    {
      "scope": "markup.underline.link",
      "font_style": "underline"
    },

    {
      "scope": "invalid",
      "foreground": "var(red)",
      "background": "color(var(red) alpha(0.2))"
    },
    {
      "scope": "markup.inserted",
      "foreground": "hsl(100, 50%, 50%)"
    },
    {
      "scope": "markup.deleted",
     "foreground": "hsl(2, 65%, 50%)"
    },
    {
      "scope": "markup.changed",
     "foreground": "hsl(30, 85%, 50%)"
    },

    {
      "scope": "markup.ignored",
     "foreground": "#aaa"
    },
    {
      "scope": "markup.untracked",
      "foreground": "#aaa"
    },
    {
      "name": "Comment",
      "scope": "comment, punctuation.definition.comment",
      "foreground": "#706f70"
    },
    {
      "name": "Constant",
      "scope": "constant.language, support.constant, constant.other.color, entity.name.type.variant.ocaml, source.rust variable.language.rust, support.type.rust, source.elixir constant.other.symbol.elixir, source.elixir constant.other.symbol.elixir punctuation.definition.constant.elixir, source.elixir variable.language.elixir, source.elixir constant.other.keywords.elixir, source.ruby constant.other.symbol, source.ruby punctuation.definition.constant",
      "foreground": "var(accent)"
    },
    {
      "name": "String",
      "scope": "string, punctuation.definition.string.begin, punctuation.definition.string.end",
      "foreground": "var(accent)"
    },
    {
      "name": "Character",
      "scope": "constant.character, source.scss keyword.operator.ampersand, source.css keyword.operator.ampersand",
      "foreground": "var(pale_chestnut)",
      "font_style": "bold"
    },
    {
      "name": "Number",
      "scope": "constant.numeric, storage.type.numeric, source.scss keyword.other.unit, source.css keyword.other.unit",
      "foreground": "var(monte_carlo)"
    },
    {
      "name": "Boolean",
      "scope": "constant.language.boolean",
      "foreground": "var(pale_chestnut)"
    },
    {
        "name": "Float",
        "scope": "meta.number.float.decimal constant.numeric, punctuation.separator.decimal, markup.underline.link",
        "foreground": "var(lavender)"
    },      
    {
        "name": "Identifier",
        "scope": "source.scss variable.declaration, source.scss punctuation.definition.variable, source.css variable.declaration, source.css punctuation.definition.variable, support.class.js, keyword.operator.word.new.js, variable.other.php, variable.parameter.php, variable.language.php, meta.function.type-declaration.haskell entity.name.function.haskell, source.haskell meta.name.haskell, entity.name.type.fsharp, punctuation.definition.variable.ruby, variable.other.readwrite.instance.ruby",
        "foreground": "var(accent)"
    },
    {
        "name": "Function",
        "scope": "keyword.declaration.function, source.scss support.function, source.css support.function, entity.name.function.c, entity.name.function.preprocessor.c, entity.name.function.c++, entity.name.function.preprocessor.c++, entity.name.function.python, variable.function.python support.function.builtin.python, entity.name.class.python, variable.annotation.python, meta.class.js entity.name.function.constructor.js, meta.class.js entity.name.function.js, meta.class.js entity.name.function.js punctuation.definition.js, support.function.classobj.php, storage.type.function.php, meta.function-call.php support.function, entity.name.function.cs, source.rust meta.function.rust entity.name.function.rust, support.function.rust, entity.name.function.clojure, entity.name.function.elm, source.elixir meta.function.public.elixir entity.name.function.public.elixir, source.java entity.name.function.java, source.sql support.function, source.ruby entity.name.function",
        "foreground": "var(accent)"
    },
    {
        "name": "Conditional",
        "scope": "keyword.control.conditional",
        "foreground": "var(accent)"
    },
    {
        "name": "Repeat",
        "scope": "keyword.control.loop, source.scss keyword.control.flow.sass",
        "foreground": "var(accent)"
    },
    {
        "name": "Label",
        "scope": "keyword.control.conditional.case, keyword.control.conditional.default, source.json meta.mapping.key.json string.quoted.double.json, source.json meta.mapping.key.json string.quoted.double.json punctuation.definition.string.begin.json, source.json meta.mapping.key.json string.quoted.double.json punctuation.definition.string.end.json",
        "foreground": "var(accent)"
    },
    {
        "name": "Operator",
        "scope": "punctuation.definition, punctuation.section, punctuation.separator, punctuation.terminator - punctuation.definition.numeric.base - keyword.operator",
        "foreground": "var(accent)"
    },
    {
        "name": "Keyword",
        "scope": "keyword, constant.other.keyword.clojure - keyword.operator - keyword.operator.word - keyword.control.flow.return.js - keyword.operator.logical",
        "foreground": "var(accent)"
    },
    {
      "name": "Statement",
      "scope": "entity.name.tag, punctuation.definition.list_item, source.shell.bash support.function, keyword.control.flow.return.js, keyword.declaration.function.python, keyword.control.flow.assert.python, keyword.operator.new.cs - keyword.control.import-export, source.sql keyword.other, source.sql keyword.operator.assignment",
      "foreground": "var(accent)"
    },
    {
      "name": "Exception",
      "scope": "keyword.control.exception.try, keyword.control.exception.catch, text.html.basic entity.name.tag.script, source.cs keyword.control.trycatch",
      "foreground": "var(accent)"
    },

    {
      "name": "PreProc",
      "scope": "source.scss entity.other.pseudo-class, source.shell.bash punctuation.definition.variable, source.shell.bash variable.other.readwrite, source.scss meta.function-call.sass variable.function.sass keyword.control.at-rule.sass, entity.other.pseudo-class.css, entity.other.pseudo-element.css, keyword.control.directive.css punctuation.definition.keyword.css, keyword.control.directive.css, comment.block.documentation.phpdoc.php keyword.other.phpdoc.php, source.haskell meta.preprocessor.c, source.haskell punctuation.definition.preprocessor.c, source.haskell meta.preprocessor.haskell",
      "foreground": "var(accent)"
    },
    {
      "name": "Include",
      "scope": "keyword.control.import.include, source.scss keyword.control.at-rule.import.css punctuation.definition.keyword.css, source.scss keyword.control.at-rule.import.css, source.scss meta.function-call.sass variable.function.sass punctuation.definition.keyword.sass, keyword.control.import-export.js, keyword.control.import.python, keyword.control.import.from.python, keyword.other.use.php, meta.module-reference.ocaml, support.other.module.ocaml, entity.name.type.module.ocaml, keyword.control.import.haskell, namespace.open.fsharp keyword.fsharp, source.fsharp keyword.control.directive.fsharp, source.cs keyword.control.import.cs, source.go keyword.other.import.go, source.rust meta.path.rust, meta.declaration.module.elm keyword.other.elm, meta.import.elm keyword.other.elm, source.elm meta.import.elm keyword.import.elm, source.java meta.package-declaration.java keyword.other.package.java, source.java meta.import.java keyword.control.import.java",
      "foreground": "var(accent)"
    },
    {
      "name": "Define",
      "scope": "keyword.control.import.define, meta.preprocessor.macro.c entity.name.constant.preprocessor.c, meta.preprocessor.macro.c++ entity.name.constant.preprocessor.c++, storage.modifier.def.clojure, meta.module.elixir keyword.control.module.elixir, source.ruby keyword.declaration.class, source.ruby keyword.declaration.function, source.ruby keyword.control.block.end",
      "foreground": "var(accent)"
    },
    {
      "name": "Macro",
      "scope": "support.macro.rust, source.ruby keyword.other.special-method",
      "foreground": "var(accent)"
    },
    {
      "name": "PreCondit",
      "scope": "keyword.control.import.c, meta.preprocessor.c, keyword.control.import.c++, meta.preprocessor.c++",
      "foreground": "var(accent)"
    },
    {
      "name": "Type",
      "scope": "support.type, entity.other.attribute-name, storage.type, support.class.builtin, source.scss entity.other, constant.other.haskell, source.haskell meta.import.haskell support.other.module.haskell, source.haskell meta.declaration.module.haskell entity.name.namespace.haskell, abstract.definition.fsharp entity.name.type.fsharp, source.elixir entity.name.type, source.java support.class.java, entity.name.class.ruby, entity.other.inherited-class.ruby, support.class.ruby",
      "foreground": "var(accent)"
    },
    {
      "name": "StorageClass",
      "scope": "storage.modifier, support.type.property-name, abstract.definition.fsharp keyword.fsharp, keyword.declaration",
      "foreground": "var(accent)"
    },
    {
      "name": "Structure",
      "scope": "keyword.declaration.enum, keyword.declaration.struct, keyword.declaration.union, variable.language.this.js, keyword.declaration.type.haskell",
      "foreground": "var(accent)"
    },
    {
      "name": "Special",
      "scope": "constant.character.escape, punctuation.section.interpolation, source.scss keyword.other.important, source.css keyword.other.important, source.scss support.type, source.css support.type, text.html.basic punctuation.definition.entity.html, text.html.basic constant.character.entity.named, text.html.basic punctuation.terminator.entity.html, entity.other.custom-property.css, variable.function.clojure",
      "foreground": "var(accent)"
    },
    {
      "name": "SpecialComment",
      "scope": "variable.annotation",
      "foreground": "var(accent)"
    },
    {
      "name": "Delimiter",
      "scope": "markup.heading punctuation.definition.heading, punctuation.definition.raw.begin, punctuation.definition.raw.end, punctuation.section.embedded.begin.php, punctuation.section.embedded.end.php",
      "foreground": "var(accent)"
    }
  ]
}
